1.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
2.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
3.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
4.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
5.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
6.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
7.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
8.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
9.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
10.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
11.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
12.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
13.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
14.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
15.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
16.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
17.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
18.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
19.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
20.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
21.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
22.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
23.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
24.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
25.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
26.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
27.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
28.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
29.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
30.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
31.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
32.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
33.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
34.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
35.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
36.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
37.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
38.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
39.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
40.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
41.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
42.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
43.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
44.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
45.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
46.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
47.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
48.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
49.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。
50.
DOM介绍 优缺点分析

　　DOM: Document Object Model 文档对象模型。

　　在应用程序中，基于DOM的XML分析器将一个XML文档转换成一个对象模型的集合（通常称DOM树），应用程序通过对这个对象模型的操作，来实现对XML文档数据的操作。

　　通过DOM接口，应用程序可以在任何时候访问XML文档中的任何一部分数据，因此，这种利用DOM接口的机制也被称作随机访问机制。

　　DOM树所提供的随机访问方式给应用程序的开发带来了很大的灵活性，它可以任意地控制整个XML文档中的内容。

　　然而，由于DOM分析器把整个XML文档转化成DOM树放在了内存中，因此，当文档比较大或结构比较复杂时，对内存的需求就比较高。

　　而且，对于结构复杂的树的遍历也是一项耗时的操作。

　　所以，DOM分析器对机器性能的要求比较高，实现效率不十分理想。

　　由于DOM分析器所采用的树结构的思想与XML文档的结构相吻合，同时鉴于随机访问所带来的方便，因此，DOM分析器还是有很广泛的应用价值的。